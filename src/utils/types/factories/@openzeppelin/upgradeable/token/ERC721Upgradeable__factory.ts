/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC721Upgradeable,
  ERC721UpgradeableInterface,
} from "../../../../@openzeppelin/upgradeable/token/ERC721Upgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611390806100206000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101c3578063b88d4fde146101d6578063c87b56dd146101e9578063e985e9c5146101fc57600080fd5b80636352211e1461018757806370a082311461019a57806395d89b41146101bb57600080fd5b8063095ea7b3116100bd578063095ea7b31461014c57806323b872dd1461016157806342842e0e1461017457600080fd5b806301ffc9a7146100e457806306fdde031461010c578063081812fc14610121575b600080fd5b6100f76100f2366004610fc5565b610238565b60405190151581526020015b60405180910390f35b6101146102d5565b6040516101039190611032565b61013461012f366004611045565b610367565b6040516001600160a01b039091168152602001610103565b61015f61015a36600461107a565b61038e565b005b61015f61016f3660046110a4565b6104e2565b61015f6101823660046110a4565b610559565b610134610195366004611045565b610574565b6101ad6101a83660046110e0565b6105d9565b604051908152602001610103565b610114610673565b61015f6101d13660046110fb565b610682565b61015f6101e436600461114d565b610691565b6101146101f7366004611045565b61070f565b6100f761020a366004611229565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982167f80ac58cd00000000000000000000000000000000000000000000000000000000148061029b57506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806102cf57507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b6060606580546102e49061125c565b80601f01602080910402602001604051908101604052809291908181526020018280546103109061125c565b801561035d5780601f106103325761010080835404028352916020019161035d565b820191906000526020600020905b81548152906001019060200180831161034057829003601f168201915b5050505050905090565b600061037282610783565b506000908152606960205260409020546001600160a01b031690565b600061039982610574565b9050806001600160a01b0316836001600160a01b0316036104275760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b336001600160a01b038216148061046157506001600160a01b0381166000908152606a6020908152604080832033845290915290205460ff165b6104d35760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161041e565b6104dd83836107ea565b505050565b6104ec3382610865565b61054e5760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b606482015260840161041e565b6104dd8383836108e4565b6104dd83838360405180602001604052806000815250610691565b6000818152606760205260408120546001600160a01b0316806102cf5760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161041e565b60006001600160a01b0382166106575760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e65720000000000000000000000000000000000000000000000606482015260840161041e565b506001600160a01b031660009081526068602052604090205490565b6060606680546102e49061125c565b61068d338383610af7565b5050565b61069b3383610865565b6106fd5760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b606482015260840161041e565b61070984848484610bc5565b50505050565b606061071a82610783565b600061073160408051602081019091526000815290565b90506000815111610751576040518060200160405280600081525061077c565b8061075b84610c4e565b60405160200161076c929190611296565b6040516020818303038152906040525b9392505050565b6000818152606760205260409020546001600160a01b03166107e75760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161041e565b50565b6000818152606960205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038416908117909155819061082c82610574565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061087183610574565b9050806001600160a01b0316846001600160a01b031614806108b857506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b806108dc5750836001600160a01b03166108d184610367565b6001600160a01b0316145b949350505050565b826001600160a01b03166108f782610574565b6001600160a01b03161461095b5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161041e565b6001600160a01b0382166109d65760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161041e565b6109e38383836001610cee565b826001600160a01b03166109f682610574565b6001600160a01b031614610a5a5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161041e565b6000818152606960209081526040808320805473ffffffffffffffffffffffffffffffffffffffff199081169091556001600160a01b0387811680865260688552838620805460001901905590871680865283862080546001019055868652606790945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610b585760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161041e565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610bd08484846108e4565b610bdc84848484610d76565b6107095760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161041e565b60606000610c5b83610ecd565b600101905060008167ffffffffffffffff811115610c7b57610c7b611137565b6040519080825280601f01601f191660200182016040528015610ca5576020820181803683370190505b5090508181016020015b600019017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084610caf57509392505050565b6001811115610709576001600160a01b03841615610d34576001600160a01b03841660009081526068602052604081208054839290610d2e9084906112db565b90915550505b6001600160a01b03831615610709576001600160a01b03831660009081526068602052604081208054839290610d6b9084906112ee565b909155505050505050565b60006001600160a01b0384163b15610ec257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610dba903390899088908890600401611301565b6020604051808303816000875af1925050508015610df5575060408051601f3d908101601f19168201909252610df29181019061133d565b60015b610ea8573d808015610e23576040519150601f19603f3d011682016040523d82523d6000602084013e610e28565b606091505b508051600003610ea05760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161041e565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108dc565b506001949350505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610f16577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310610f42576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610f6057662386f26fc10000830492506010015b6305f5e1008310610f78576305f5e100830492506008015b6127108310610f8c57612710830492506004015b60648310610f9e576064830492506002015b600a83106102cf5760010192915050565b6001600160e01b0319811681146107e757600080fd5b600060208284031215610fd757600080fd5b813561077c81610faf565b60005b83811015610ffd578181015183820152602001610fe5565b50506000910152565b6000815180845261101e816020860160208601610fe2565b601f01601f19169290920160200192915050565b60208152600061077c6020830184611006565b60006020828403121561105757600080fd5b5035919050565b80356001600160a01b038116811461107557600080fd5b919050565b6000806040838503121561108d57600080fd5b6110968361105e565b946020939093013593505050565b6000806000606084860312156110b957600080fd5b6110c28461105e565b92506110d06020850161105e565b9150604084013590509250925092565b6000602082840312156110f257600080fd5b61077c8261105e565b6000806040838503121561110e57600080fd5b6111178361105e565b91506020830135801515811461112c57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561116357600080fd5b61116c8561105e565b935061117a6020860161105e565b925060408501359150606085013567ffffffffffffffff8082111561119e57600080fd5b818701915087601f8301126111b257600080fd5b8135818111156111c4576111c4611137565b604051601f8201601f19908116603f011681019083821181831017156111ec576111ec611137565b816040528281528a602084870101111561120557600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561123c57600080fd5b6112458361105e565b91506112536020840161105e565b90509250929050565b600181811c9082168061127057607f821691505b60208210810361129057634e487b7160e01b600052602260045260246000fd5b50919050565b600083516112a8818460208801610fe2565b8351908301906112bc818360208801610fe2565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156102cf576102cf6112c5565b808201808211156102cf576102cf6112c5565b60006001600160a01b038087168352808616602084015250836040830152608060608301526113336080830184611006565b9695505050505050565b60006020828403121561134f57600080fd5b815161077c81610faf56fea2646970667358221220a85c55a25eb85a0022a2ecd982d5d3f434a60f69a215443d3ef2644207a086d764736f6c63430008130033";

type ERC721UpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721UpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Upgradeable__factory extends ContractFactory {
  constructor(...args: ERC721UpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Upgradeable> {
    return super.deploy(overrides || {}) as Promise<ERC721Upgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC721Upgradeable {
    return super.attach(address) as ERC721Upgradeable;
  }
  override connect(signer: Signer): ERC721Upgradeable__factory {
    return super.connect(signer) as ERC721Upgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721UpgradeableInterface {
    return new utils.Interface(_abi) as ERC721UpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Upgradeable {
    return new Contract(address, _abi, signerOrProvider) as ERC721Upgradeable;
  }
}
