/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Security, SecurityInterface } from "../Security";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "management",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Security__ERC20TransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "Security__InvalidCoin",
    type: "error",
  },
  {
    inputs: [],
    name: "Security__NotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "Security__TransferFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "manager",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IManagement.Coin",
        name: "coin",
        type: "uint8",
      },
    ],
    name: "WithdrawnToAddress",
    type: "event",
  },
  {
    inputs: [],
    name: "getManagement",
    outputs: [
      {
        internalType: "contract IManagement",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "enum IManagement.Coin",
        name: "coin",
        type: "uint8",
      },
    ],
    name: "withdrawToAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610b9f380380610b9f83398101604081905261002f916100a7565b61003833610057565b600180556002805460ff191690556001600160a01b03166080526100d7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100b957600080fd5b81516001600160a01b03811681146100d057600080fd5b9392505050565b608051610a996101066000396000818160e901528181610422015281816105d801526106fa0152610a996000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100c257806390ca03d0146100e7578063b329b72e1461010d578063f2fde38b1461012057600080fd5b80633f4ba83a1461008d5780635c975abb14610097578063715018a6146100b25780638456cb59146100ba575b600080fd5b610095610133565b005b60025460ff1660405190151581526020015b60405180910390f35b610095610145565b610095610157565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100a9565b7f00000000000000000000000000000000000000000000000000000000000000006100cf565b61009561011b36600461095a565b610167565b61009561012e3660046109a0565b6101fd565b61013b610292565b6101436102a3565b565b61014d6102f5565b610143600061034f565b61015f610292565b6101436103b7565b61016f610292565b6101776103f4565b600081600381111561018b5761018b6109c4565b0361019f5761019a83836104cb565b6101ab565b6101ab81308585610564565b826001600160a01b0316336001600160a01b03167fa55fe81116427fb2a175a84303712673cd30e706f711c9b9aebc531d0523531e84846040516101f09291906109fc565b60405180910390a3505050565b6102056102f5565b6001600160a01b0381166102865760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61028f8161034f565b50565b61029a610847565b61014360018055565b6102ab6108a0565b6002805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000546001600160a01b031633146101435760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161027d565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6103bf6108f2565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586102d83390565b6040517f330602260000000000000000000000000000000000000000000000000000000081523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690633306022690602401602060405180830381865afa158015610471573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104959190610a10565b610143576040517f9402bca500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8015610560576000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461051e576040519150601f19603f3d011682016040523d82523d6000602084013e610523565b606091505b505090508061055e576040517f52c1682a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b5050565b6000846003811115610578576105786109c4565b036105af576040517f2a2ba0c800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000306001600160a01b038516036106e3576040516318cbf99160e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633197f3229061060d908890600401610a32565b602060405180830381865afa15801561062a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064e9190610a46565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b03858116600483015260248201859052919091169063a9059cbb906044016020604051808303816000875af11580156106b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106dc9190610a10565b9050610809565b6040516318cbf99160e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633197f3229061072f908890600401610a32565b602060405180830381865afa15801561074c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107709190610a46565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b03868116600483015285811660248301526044820185905291909116906323b872dd906064016020604051808303816000875af11580156107e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108069190610a10565b90505b80610840576040517f967fb4f300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050565b6002600154036108995760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161027d565b6002600155565b60025460ff166101435760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604482015260640161027d565b60025460ff16156101435760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a2070617573656400000000000000000000000000000000604482015260640161027d565b6001600160a01b038116811461028f57600080fd5b60008060006060848603121561096f57600080fd5b833561097a81610945565b92506020840135915060408401356004811061099557600080fd5b809150509250925092565b6000602082840312156109b257600080fd5b81356109bd81610945565b9392505050565b634e487b7160e01b600052602160045260246000fd5b600481106109f857634e487b7160e01b600052602160045260246000fd5b9052565b828152604081016109bd60208301846109da565b600060208284031215610a2257600080fd5b815180151581146109bd57600080fd5b60208101610a4082846109da565b92915050565b600060208284031215610a5857600080fd5b81516109bd8161094556fea26469706673582212204a52d138eea512c622d1358263b63fcd0eecdb22f3d80d62d512e28b94ed9d1e64736f6c63430008130033";

type SecurityConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SecurityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Security__factory extends ContractFactory {
  constructor(...args: SecurityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    management: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Security> {
    return super.deploy(management, overrides || {}) as Promise<Security>;
  }
  override getDeployTransaction(
    management: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(management, overrides || {});
  }
  override attach(address: string): Security {
    return super.attach(address) as Security;
  }
  override connect(signer: Signer): Security__factory {
    return super.connect(signer) as Security__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SecurityInterface {
    return new utils.Interface(_abi) as SecurityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Security {
    return new Contract(address, _abi, signerOrProvider) as Security;
  }
}
