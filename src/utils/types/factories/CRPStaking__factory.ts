/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { CRPStaking, CRPStakingInterface } from "../CRPStaking";

const _abi = [
  {
    inputs: [],
    name: "CRPStaking__DirectERC721TokenTransfer",
    type: "error",
  },
  {
    inputs: [],
    name: "CRPStaking__InvalidTimeUnit",
    type: "error",
  },
  {
    inputs: [],
    name: "CRPStaking__NoRewards",
    type: "error",
  },
  {
    inputs: [],
    name: "CRPStaking__NoTokensGiven",
    type: "error",
  },
  {
    inputs: [],
    name: "CRPStaking__NotCrowdfundingToken",
    type: "error",
  },
  {
    inputs: [],
    name: "CRPStaking__NotTokenOwnerOrApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "CRPStaking__NotTokenStaker",
    type: "error",
  },
  {
    inputs: [],
    name: "CRPStaking__TokenAddressZero",
    type: "error",
  },
  {
    inputs: [],
    name: "CRPStaking__TokenIDOutOfTier",
    type: "error",
  },
  {
    inputs: [],
    name: "CRPStaking__WithdrawingMoreThanStaked",
    type: "error",
  },
  {
    inputs: [],
    name: "SecurityUpgradeable__ERC20MintFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "SecurityUpgradeable__ERC20TransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "SecurityUpgradeable__InvalidCoin",
    type: "error",
  },
  {
    inputs: [],
    name: "SecurityUpgradeable__NotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "SecurityUpgradeable__TransferFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
    ],
    name: "RewardsClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_conditionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_timeUnit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[3]",
        name: "_rewardsPerUnitTime",
        type: "uint256[3]",
      },
    ],
    name: "StakingConditionSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "TokensStaked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "TokensWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "USDTokenClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "depositor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "USDTokenSplitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "manager",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "WithdrawnForAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "manager",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IManagement.Coin",
        name: "coin",
        type: "uint8",
      },
    ],
    name: "WithdrawnToAddress",
    type: "event",
  },
  {
    inputs: [],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimUSD",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllStakersArray",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ICrowdfund.QuotaClass",
        name: "classz",
        type: "uint8",
      },
    ],
    name: "getClassAmounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentStakingCondition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "timeUnit",
            type: "uint256",
          },
          {
            internalType: "uint256[3]",
            name: "rewardsPerUnitTime",
            type: "uint256[3]",
          },
          {
            internalType: "uint256",
            name: "startTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTimestamp",
            type: "uint256",
          },
        ],
        internalType: "struct ICRPStaking.StakingCondition",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getIsIndexed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getManagement",
    outputs: [
      {
        internalType: "contract IManagement",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNextConditionId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "getSplitFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "getStaker",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[3]",
            name: "amountStaked",
            type: "uint256[3]",
          },
          {
            internalType: "uint256",
            name: "timeOfLastUpdate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unclaimedRewards",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "conditionIdOflastUpdate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakersArrayIndex",
            type: "uint256",
          },
        ],
        internalType: "struct ICRPStaking.Staker",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getStakerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getStakersArray",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "conditionId",
        type: "uint256",
      },
    ],
    name: "getStakingCondition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "timeUnit",
            type: "uint256",
          },
          {
            internalType: "uint256[3]",
            name: "rewardsPerUnitTime",
            type: "uint256[3]",
          },
          {
            internalType: "uint256",
            name: "startTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTimestamp",
            type: "uint256",
          },
        ],
        internalType: "struct ICRPStaking.StakingCondition",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakingToken",
    outputs: [
      {
        internalType: "contract IERC721ArtHandle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSplitFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "getUnclaimedUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timeUnit",
        type: "uint256",
      },
      {
        internalType: "uint256[3]",
        name: "rewardsPerUnitTime",
        type: "uint256[3]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timeUnit",
        type: "uint256",
      },
      {
        internalType: "uint256[3]",
        name: "rewardsPerUnitTime",
        type: "uint256[3]",
      },
    ],
    name: "setStakingCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "splitUSD",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "stakeForAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "withdrawForAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "enum IManagement.Coin",
        name: "coin",
        type: "uint8",
      },
    ],
    name: "withdrawToAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260ca805460ff60a01b1916600160a01b17905534801561002357600080fd5b50613b41806100336000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c806387dbe58c1161010f578063a72f2ab8116100a2578063e339dbc311610071578063e339dbc31461043a578063f166938114610463578063f2fde38b1461046b578063f98487ed1461047e57600080fd5b8063a72f2ab8146103ec578063b329b72e146103ff578063c72d3bc114610412578063d6b80a961461042557600080fd5b8063983d95ce116100de578063983d95ce146103955780639f9106d1146103a8578063a23c44b1146103b9578063a2ee0cf1146103d957600080fd5b806387dbe58c1461033d5780638da5cb5b1461036057806390ca03d014610371578063922963b81461038257600080fd5b806360613daf11610187578063715018a611610156578063715018a6146102ee5780637a9998fa146102f65780637c1bfc111461032d5780638456cb591461033557600080fd5b806360613daf1461027f57806362a82d7d146102aa5780636667d068146102d35780636d0bb2dd146102e657600080fd5b806324f0c010116101c357806324f0c01014610238578063372500ab146102585780633f4ba83a146102605780635c975abb1461026857600080fd5b80630fbf0a93146101ea578063150b7a02146101ff57806323a3e4a314610230575b600080fd5b6101fd6101f83660046134bc565b610491565b005b61021261020d366004613513565b6104b0565b6040516001600160e01b031990911681526020015b60405180910390f35b6101fd610524565b61024b6102463660046135b2565b610586565b60405161022791906135ee565b6101fd6105ff565b6101fd6106ad565b60975460ff165b6040519015158152602001610227565b61029261028d3660046135b2565b6106bf565b6040516001600160a01b039091168152602001610227565b6102926102b83660046135b2565b600090815260d060205260409020546001600160a01b031690565b6101fd6102e1366004613623565b6106ef565b61024b610868565b6101fd6108f4565b61031f61030436600461364f565b6001600160a01b0316600090815260d4602052604090205490565b604051908152602001610227565b60cb5461031f565b6101fd610906565b61026f61034b3660046135b2565b600090815260ce602052604090205460ff1690565b6033546001600160a01b0316610292565b60c9546001600160a01b0316610292565b61031f61039036600461366c565b610916565b6101fd6103a33660046134bc565b610955565b60ca546001600160a01b0316610292565b6103cc6103c736600461364f565b6109f7565b604051610227919061368d565b6101fd6103e73660046136df565b610a80565b6101fd6103fa36600461371e565b610fbe565b6101fd61040d366004613773565b611075565b6101fd6104203660046137b9565b61110b565b61042d61126c565b60405161022791906137e6565b61031f61044836600461364f565b6001600160a01b0316600090815260d3602052604090205490565b60cc5461031f565b6101fd61047936600461364f565b6112ce565b6101fd61048c36600461371e565b61135e565b610499611386565b6104a1611398565b6104ac3383836113a0565b5050565b60ca54600090600160a01b900460ff166002146104f9576040517f7cdbf26100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b507f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b61052c611386565b610534611398565b60008061054033611bc0565b9092509050337f2918f32a410cec1f54b087b3add1d64612b05b2db0980eaacd64252d877b9a936105718385613849565b60405190815260200160405180910390a25050565b61058e6133a3565b600082815260d160209081526040918290208251608081018452815481528351606081019485905290939192840191600184019060039082845b8154815260200190600101908083116105c85750505050508152602001600482015481526020016005820154815250509050919050565b610607611386565b61060f611398565b600061061a33611c9f565b33600090815260cf6020526040902060040154610637919061385c565b905080600003610673576040517fd7b4d5bd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061067f3383611ed1565b9050337ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe6105718385613849565b6106b5611f5b565b6106bd61213a565b565b600060cd82815481106106d4576106d461386f565b6000918252602090912001546001600160a01b031692915050565b6106f7611386565b6106ff611398565b610707611f5b565b610714600183308461214a565b600060cd80548060200260200160405190810160405280929190818152602001828054801561076c57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161074e575b505060cc549394506000925050505b825181101561082c578160d3600085848151811061079b5761079b61386f565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054856107cf9190613885565b6107d991906138b2565b60d460008584815181106107ef576107ef61386f565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000208190555080610825906138d4565b905061077b565b5060405183815233907f6eed76bda9425058cb29a71224fcd591802f51eb97ebc728418820a5bf8a54fa9060200160405180910390a250505050565b6108706133a3565b60d16000600160cb546108839190613849565b81526020808201929092526040908101600020815160808101835281548152825160608101938490529093919291840191600184019060039082845b8154815260200190600101908083116108bf575050505050815260200160048201548152602001600582015481525050905090565b6108fc6123dc565b6106bd6000612436565b61090e611f5b565b6106bd612488565b600060d2600083600281111561092e5761092e6138ed565b600281111561093f5761093f6138ed565b8152602001908152602001600020549050919050565b61095d611386565b610965611398565b600061097033611c9f565b33600090815260cf602052604090206004015461098d919061385c565b90506109993382611ed1565b506109a333611bc0565b50506109b0338484612498565b82826040516109c0929190613903565b6040519081900381209033907f09ba0ae49142860d7eec1f3ce54722d70b60910facbe018cccb1099e4e84755c90600090a3505050565b6109ff6133d1565b6001600160a01b038216600090815260cf602052604090819020815161010081019092528160a081018260038282826020028201915b815481526020019060010190808311610a3557505050505081526020016003820154815260200160048201548152602001600582015481526020016006820154815250509050919050565b600054610100900460ff1615808015610aa05750600054600160ff909116105b80610aba5750303b158015610aba575060005460ff166001145b610b315760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b6000805460ff191660011790558015610b54576000805461ff0019166101001790555b6001600160a01b038416610b94576040517fb2f48dbc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001600160a01b0316846001600160a01b0316634f1eae096040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bdd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c019190613945565b6001600160a01b031603610c41576040517f3120973200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610cac846001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca69190613945565b33612b50565b60ca80546001600160a01b0319166001600160a01b038616908117909155604080517f4f1eae09000000000000000000000000000000000000000000000000000000008152905160009291634f1eae099160048083019260209291908290030181865afa158015610d21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d459190613945565b604051633e76840f60e01b81529091506001600160a01b03821690633e76840f90610d7590600090600401613962565b60c060405180830381865afa158015610d92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db691906139de565b6020908101516000805260d29091527f20791b593a776a2631a28f4a3f62a14ad18db22add38130c4f4a8fdfa463988555604051633e76840f60e01b81526001600160a01b03821690633e76840f90610e1490600190600401613962565b60c060405180830381865afa158015610e31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5591906139de565b602090810151600160005260d29091527fb7404ce2b5a52e61a6b5c9b4585ed65d8cb4b8848d3ee262a356d0c2c46c5f3555604051633e76840f60e01b81526001600160a01b03821690633e76840f90610eb490600290600401613962565b60c060405180830381865afa158015610ed1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef591906139de565b602090810151600260005260d29091527f251822df7baccb20562ed2cfb8675da588fc14a1f166aa1f3d3bed7a398911cd55610f31848461110b565b5060cd80546001810182556000919091527f83978b4c69c48dd978ab43fe30f077615294f938fb7f936d9eb340e51ea7db2e0180546001600160a01b03191690558015610fb8576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b610fc6611386565b610fce612bff565b6000610fd984611c9f565b6001600160a01b038516600090815260cf6020526040902060040154610fff919061385c565b905061100b8482611ed1565b5061101584611bc0565b5050611022848484612498565b8282604051611032929190613903565b604051908190038120906001600160a01b0386169033907f3b8fdf210e62f9e268b8b25666a2958d732ee26743fcabc1496b89be1b5aaf5a90600090a450505050565b61107d611386565b611085612bff565b6000816003811115611099576110996138ed565b036110ad576110a88383612c6b565b6110b9565b6110b98130858561214a565b826001600160a01b0316336001600160a01b03167fa55fe81116427fb2a175a84303712673cd30e706f711c9b9aebc531d0523531e84846040516110fe929190613a75565b60405180910390a3505050565b611113611386565b61111b611f5b565b611123611398565b62278d00821015611160576040517f6a2366fc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60cb8054906001906000611174838561385c565b9250508190555060405180608001604052808481526020018360038060200260405190810160405280929190826003602002808284376000920182905250928452505042602080840191909152604092830182905284825260d1815291902082518155908201516111eb9060018301906003613406565b5060408201516004820155606090910151600590910155801561122d574260d16000611218600185613849565b81526020810191909152604001600020600501555b807f3c3aedbba0ee7028fcfa45fd53bc9bf1bc2d19418e072c4b05b7a08990d10bf5848460405161125f929190613a90565b60405180910390a2505050565b606060cd8054806020026020016040519081016040528092919081815260200182805480156112c457602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116112a6575b5050505050905090565b6112d66123dc565b6001600160a01b0381166113525760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610b28565b61135b81612436565b50565b611366611386565b61136e611398565b611376612bff565b6113818383836113a0565b505050565b61138e612cfe565b6106bd6001606555565b6106bd612d5e565b8060008190036113c357604051636ed3eb1b60e01b815260040160405180910390fd5b60ca547f20791b593a776a2631a28f4a3f62a14ad18db22add38130c4f4a8fdfa4639885547fb7404ce2b5a52e61a6b5c9b4585ed65d8cb4b8848d3ee262a356d0c2c46c5f35547f251822df7baccb20562ed2cfb8675da588fc14a1f166aa1f3d3bed7a398911cd546001600160a01b03888116600090815260cf60205260409020600601549416931561145f5761145a88612db1565b61150b565b60cd80546001808201835560008390527f83978b4c69c48dd978ab43fe30f077615294f938fb7f936d9eb340e51ea7db2e90910180546001600160a01b0319166001600160a01b038c1617905590546114b89190613849565b6001600160a01b038916600090815260cf6020526040902060068101919091554260039091015560cb546114ee90600190613849565b6001600160a01b038916600090815260cf60205260409020600501555b60408051600380825260808201909252600091602082016060803683370190505090506000805b87811015611a305760ce60008b8b848181106115505761155061386f565b602090810292909201358352508101919091526040016000205460ff16611a20578a6001600160a01b0316876001600160a01b0316636352211e8c8c8581811061159c5761159c61386f565b905060200201356040518263ffffffff1660e01b81526004016115c191815260200190565b602060405180830381865afa1580156115de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116029190613945565b6001600160a01b03161480156117345750306001600160a01b03881663081812fc8c8c858181106116355761163561386f565b905060200201356040518263ffffffff1660e01b815260040161165a91815260200190565b602060405180830381865afa158015611677573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061169b9190613945565b6001600160a01b0316148061173457506040517fe985e9c50000000000000000000000000000000000000000000000000000000081526001600160a01b038c8116600483015230602483015288169063e985e9c590604401602060405180830381865afa158015611710573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117349190613aa6565b61176a576040517fc1fbf54d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60ca805460ff60a01b1916740200000000000000000000000000000000000000001790556001600160a01b0387166342842e0e8c308d8d868181106117b1576117b161386f565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401600060405180830381600087803b15801561180857600080fd5b505af115801561181c573d6000803e3d6000fd5b505060ca805460ff60a01b1916600160a01b179055508b905060d060008c8c8581811061184b5761184b61386f565b90506020020135815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600160ce60008c8c8581811061189c5761189c61386f565b90506020020135815260200190815260200160002060006101000a81548160ff021916908315150217905550858a8a838181106118db576118db61386f565b90506020020135101561192557826000815181106118fb576118fb61386f565b602002602001018051809190611910906138d4565b90525061191e60018361385c565b9150611a20565b61192f858761385c565b8a8a838181106119415761194161386f565b90506020020135101561198457826001815181106119615761196161386f565b602002602001018051809190611976906138d4565b90525061191e60028361385c565b8361198f868861385c565b611999919061385c565b8a8a838181106119ab576119ab61386f565b9050602002013510156119ee57826002815181106119cb576119cb61386f565b6020026020010180518091906119e0906138d4565b90525061191e60038361385c565b6040517ff8e472a800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611a29816138d4565b9050611532565b5081600081518110611a4457611a4461386f565b6020908102919091018101516001600160a01b038c16600090815260cf909252604082209091016000828254611a7a919061385c565b9250508190555081600181518110611a9457611a9461386f565b6020908102919091018101516001600160a01b038c16600090815260cf90925260409091206001016000828254611acb919061385c565b9250508190555081600281518110611ae557611ae561386f565b6020908102919091018101516001600160a01b038c16600090815260cf90925260409091206002016000828254611b1c919061385c565b925050819055508060cc6000828254611b35919061385c565b90915550506001600160a01b038a16600090815260d3602052604081208054839290611b6290849061385c565b9091555050604051611b77908a908a90613903565b604051908190038120906001600160a01b038c169033907faa4ffa239dbcca3d219eff6bcc4762ab67bf1fb4a391d566ea8ad97cf8fb17ec90600090a450505050505050505050565b6001600160a01b038116600090815260d460205260408120805490829055819081612710611bf06101f484613885565b611bfa91906138b2565b9050611c7f60013060c960009054906101000a90046001600160a01b03166001600160a01b03166366e992e56040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c799190613945565b8461214a565b611c9560013087611c908587613849565b61214a565b9094909350915050565b6001600160a01b038116600090815260cf6020526040808220815161010081019092528291908160a081018260038282826020028201915b815481526020019060010190808311611cd75750505091835250506003820154602082015260048201546040820152600582015460608083019190915260069092015460809091015281015160cb5491925090815b81811015611ec857600081815260d160209081526040808320815160808101835281548152825160608101938490529093919291840191600184019060039082845b815481526020019060010190808311611d6e57505050505081526020016004820154815260200160058201548152505090506000848303611db3578560200151611db9565b81604001515b905060008260600151600003611dcf5742611dd5565b82606001515b8351909150600090611de78484613849565b611df191906138b2565b1115611eb45760005b60038160ff161015611eb257600080611e618a600001518460ff1660038110611e2557611e2561386f565b6020020151611e348787613849565b611e3e9190613885565b87602001518560ff1660038110611e5757611e5761386f565b6020020151612e42565b91509150600080611e818d896000015185611e7c91906138b2565b612e8d565b91509150838015611e8f5750815b611e99578c611e9b565b805b9c505050505080611eab90613ac8565b9050611dfa565b505b50505080611ec1906138d4565b9050611d2c565b50505050919050565b600080612710611ee36101f485613885565b611eed91906138b2565b6001600160a01b038516600090815260cf602052604081204260038201556004015560cb54909150611f2190600190613849565b6001600160a01b038516600090815260cf6020526040902060050155611f52600385611f4d8487613849565b612ea8565b90505b92915050565b60c9546001600160a01b031663e6b5ce0d611f7e6033546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015611fc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fe69190613aa6565b61209d5760c954604051631983011360e11b81523360048201526001600160a01b0390911690633306022690602401602060405180830381865afa158015612032573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120569190613aa6565b8061206b575060c9546001600160a01b031633145b8061208057506033546001600160a01b031633145b6106bd5760405163125531bb60e31b815260040160405180910390fd5b60c954604051631983011360e11b81523360048201526001600160a01b0390911690633306022690602401602060405180830381865afa1580156120e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121099190613aa6565b80612080575060c9546001600160a01b031633146106bd5760405163125531bb60e31b815260040160405180910390fd5b612142611386565b6106bd613013565b600084600381111561215e5761215e6138ed565b0361217c57604051633d147c4f60e11b815260040160405180910390fd5b6000306001600160a01b038516036122945760c9546040516318cbf99160e11b81526001600160a01b0390911690633197f322906121be908890600401613ae7565b602060405180830381865afa1580156121db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121ff9190613945565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b03858116600483015260248201859052919091169063a9059cbb906044016020604051808303816000875af1158015612269573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061228d9190613aa6565b905061239e565b60c9546040516318cbf99160e11b81526001600160a01b0390911690633197f322906122c4908890600401613ae7565b602060405180830381865afa1580156122e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123059190613945565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b03868116600483015285811660248301526044820185905291909116906323b872dd906064016020604051808303816000875af1158015612377573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061239b9190613aa6565b90505b806123d5576040517fccfc41d000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050565b6033546001600160a01b031633146106bd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b28565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b612490611386565b6106bd613065565b6001600160a01b038316600090815260cf6020526040808220815160608101928390529160039082845b8154815260200190600101908083116124c2575093945085935050506000829003905061250257604051636ed3eb1b60e01b815260040160405180910390fd5b60408201516020830151835183929161251a9161385c565b612524919061385c565b101561255c576040517f1e83155100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60ca546001600160a01b031661257186612db1565b6040830151602084015184518492916125899161385c565b612593919061385c565b036126905760cd8054600091906125ac90600190613849565b815481106125bc576125bc61386f565b60009182526020808320909101546001600160a01b038a8116845260cf90925260409092206006015460cd8054929093169350918391839081106126025761260261386f565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055918416815260cf9091526040902060060181905560cd80548061264f5761264f613af5565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b038a16825260cf9052604081206006015550505b60d260209081527f20791b593a776a2631a28f4a3f62a14ad18db22add38130c4f4a8fdfa4639885547fb7404ce2b5a52e61a6b5c9b4585ed65d8cb4b8848d3ee262a356d0c2c46c5f3554600260009081527f251822df7baccb20562ed2cfb8675da588fc14a1f166aa1f3d3bed7a398911cd546040805160038082526080820190925294959394919382016060803683370190505090506000805b87811015612a0c578b6001600160a01b031660d060008d8d858181106127545761275461386f565b60209081029290920135835250810191909152604001600020546001600160a01b0316146127ae576040517f693c488700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b858b8b838181106127c1576127c161386f565b90506020020135101561280b57826000815181106127e1576127e161386f565b6020026020010180518091906127f6906138d4565b90525061280460018361385c565b91506128d4565b612815858761385c565b8b8b838181106128275761282761386f565b90506020020135101561286a57826001815181106128475761284761386f565b60200260200101805180919061285c906138d4565b90525061280460028361385c565b83612875868861385c565b61287f919061385c565b8b8b838181106128915761289161386f565b9050602002013510156119ee57826002815181106128b1576128b161386f565b6020026020010180518091906128c6906138d4565b90525061280460038361385c565b600060d060008d8d858181106128ec576128ec61386f565b90506020020135815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600060ce60008d8d8581811061293d5761293d61386f565b90506020020135815260200190815260200160002060006101000a81548160ff021916908315150217905550866001600160a01b03166342842e0e308e8e8e8681811061298c5761298c61386f565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401600060405180830381600087803b1580156129e357600080fd5b505af11580156129f7573d6000803e3d6000fd5b5050505080612a05906138d4565b905061272c565b5081600081518110612a2057612a2061386f565b6020908102919091018101516001600160a01b038d16600090815260cf909252604082209091016000828254612a569190613849565b9250508190555081600181518110612a7057612a7061386f565b6020908102919091018101516001600160a01b038d16600090815260cf90925260409091206001016000828254612aa79190613849565b9250508190555081600281518110612ac157612ac161386f565b6020908102919091018101516001600160a01b038d16600090815260cf90925260409091206002016000828254612af89190613849565b925050819055508060cc6000828254612b119190613849565b90915550506001600160a01b038b16600090815260d3602052604081208054839290612b3e908490613849565b90915550505050505050505050505050565b600054610100900460ff16612bbb5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610b28565b612bc36130a2565b612bcc826112ce565b612bd4613115565b612bdc613188565b60c980546001600160a01b0319166001600160a01b039290921691909117905550565b60c954604051631983011360e11b81523360048201526001600160a01b0390911690633306022690602401602060405180830381865afa158015612c47573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120809190613aa6565b80156104ac576000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612cbe576040519150601f19603f3d011682016040523d82523d6000602084013e612cc3565b606091505b5050905080611381576040517fedd2d7da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260655403612d505760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b28565b6002606555565b6001606555565b60975460ff16156106bd5760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610b28565b6000612dbc82611c9f565b905080156104ac576001600160a01b038216600090815260cf602052604081206004018054839290612def90849061385c565b90915550506001600160a01b038216600090815260cf602052604090204260039091015560cb54612e2290600190613849565b6001600160a01b038316600090815260cf60205260409020600501555050565b60008083600003612e595750600190506000612e86565b83830283858281612e6c57612e6c61389c565b0414612e7f576000809250925050612e86565b6001925090505b9250929050565b60008083830184811015612e7f576000809250925050612e86565b6000836003811115612ebc57612ebc6138ed565b03612eda57604051633d147c4f60e11b815260040160405180910390fd5b60c9546040516318cbf99160e11b81526000916001600160a01b031690633197f32290612f0b908790600401613ae7565b602060405180830381865afa158015612f28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f4c9190613945565b6040517f40c10f190000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301526024820185905291909116906340c10f19906044016020604051808303816000875af1158015612fb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fda9190613aa6565b905080610fb8576040517f5d19b1c800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61301b6131fb565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b61306d612d5e565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586130483390565b600054610100900460ff1661310d5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610b28565b6106bd61324d565b600054610100900460ff166131805760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610b28565b6106bd6132c1565b600054610100900460ff166131f35760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610b28565b6106bd61332c565b60975460ff166106bd5760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610b28565b600054610100900460ff166132b85760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610b28565b6106bd33612436565b600054610100900460ff16612d575760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610b28565b600054610100900460ff166133975760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610b28565b6097805460ff19169055565b6040518060800160405280600081526020016133bd613444565b815260200160008152602001600081525090565b6040518060a001604052806133e4613444565b8152602001600081526020016000815260200160008152602001600081525090565b8260038101928215613434579160200282015b82811115613434578251825591602001919060010190613419565b50613440929150613462565b5090565b60405180606001604052806003906020820280368337509192915050565b5b808211156134405760008155600101613463565b60008083601f84011261348957600080fd5b50813567ffffffffffffffff8111156134a157600080fd5b6020830191508360208260051b8501011115612e8657600080fd5b600080602083850312156134cf57600080fd5b823567ffffffffffffffff8111156134e657600080fd5b6134f285828601613477565b90969095509350505050565b6001600160a01b038116811461135b57600080fd5b60008060008060006080868803121561352b57600080fd5b8535613536816134fe565b94506020860135613546816134fe565b935060408601359250606086013567ffffffffffffffff8082111561356a57600080fd5b818801915088601f83011261357e57600080fd5b81358181111561358d57600080fd5b89602082850101111561359f57600080fd5b9699959850939650602001949392505050565b6000602082840312156135c457600080fd5b5035919050565b8060005b6003811015610fb85781518452602093840193909101906001016135cf565b8151815260208083015160c0830191613609908401826135cb565b506040830151608083015260609092015160a09091015290565b6000806040838503121561363657600080fd5b8235613641816134fe565b946020939093013593505050565b60006020828403121561366157600080fd5b8135611f52816134fe565b60006020828403121561367e57600080fd5b813560038110611f5257600080fd5b600060e0820190506136a08284516135cb565b6020830151606083015260408301516080830152606083015160a0830152608083015160c083015292915050565b8060608101831015611f5557600080fd5b600080600060a084860312156136f457600080fd5b83356136ff816134fe565b92506020840135915061371585604086016136ce565b90509250925092565b60008060006040848603121561373357600080fd5b833561373e816134fe565b9250602084013567ffffffffffffffff81111561375a57600080fd5b61376686828701613477565b9497909650939450505050565b60008060006060848603121561378857600080fd5b8335613793816134fe565b9250602084013591506040840135600481106137ae57600080fd5b809150509250925092565b600080608083850312156137cc57600080fd5b823591506137dd84602085016136ce565b90509250929050565b6020808252825182820181905260009190848201906040850190845b818110156138275783516001600160a01b031683529284019291840191600101613802565b50909695505050505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115611f5557611f55613833565b80820180821115611f5557611f55613833565b634e487b7160e01b600052603260045260246000fd5b8082028115828204841417611f5557611f55613833565b634e487b7160e01b600052601260045260246000fd5b6000826138cf57634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016138e6576138e6613833565b5060010190565b634e487b7160e01b600052602160045260246000fd5b60007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561393257600080fd5b8260051b80858437919091019392505050565b60006020828403121561395757600080fd5b8151611f52816134fe565b6020810160038310613976576139766138ed565b91905290565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff811182821017156139b5576139b561397c565b60405290565b6040516060810167ffffffffffffffff811182821017156139b5576139b561397c565b600060c082840312156139f057600080fd5b6139f8613992565b83601f840112613a0757600080fd5b613a0f6139bb565b806060850186811115613a2157600080fd5b855b81811015613a3b578051845260209384019301613a23565b50908352516020830152506080830151604082015260a090920151606083015250919050565b60048110613a7157613a716138ed565b9052565b82815260408101613a896020830184613a61565b9392505050565b8281526080810160608360208401379392505050565b600060208284031215613ab857600080fd5b81518015158114611f5257600080fd5b600060ff821660ff8103613ade57613ade613833565b60010192915050565b60208101611f558284613a61565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220d9c0032cee95bec0f2e0c6ec1ee2220a500b37084a90f6eecfc85da9c15635a964736f6c63430008130033";

type CRPStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CRPStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CRPStaking__factory extends ContractFactory {
  constructor(...args: CRPStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CRPStaking> {
    return super.deploy(overrides || {}) as Promise<CRPStaking>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CRPStaking {
    return super.attach(address) as CRPStaking;
  }
  override connect(signer: Signer): CRPStaking__factory {
    return super.connect(signer) as CRPStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CRPStakingInterface {
    return new utils.Interface(_abi) as CRPStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CRPStaking {
    return new Contract(address, _abi, signerOrProvider) as CRPStaking;
  }
}
