/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PermissionsLogic,
  PermissionsLogicInterface,
} from "../../../@thirdweb/plugin/PermissionsLogic";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRoleWithSwitch",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610922806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806391d148541161005b57806391d14854146100fc578063a217fddf1461011f578063a32fa5b314610127578063d547741f1461013a57600080fd5b8063248a9ca3146100825780632f2ff15d146100d457806336568abe146100e9575b600080fd5b6100c161009036600461073c565b60009081527fd0ebebe8e6445c62babf8fef767eb39f1002bb957bb5b83258275a4e46428ed6602052604090205490565b6040519081526020015b60405180910390f35b6100e76100e2366004610755565b61014d565b005b6100e76100f7366004610755565b61022c565b61010f61010a366004610755565b610292565b60405190151581526020016100cb565b6100c1600081565b61010f610135366004610755565b6102de565b6100e7610148366004610755565b610352565b60008281527fd0ebebe8e6445c62babf8fef767eb39f1002bb957bb5b83258275a4e46428ed660205260409020547fd0ebebe8e6445c62babf8fef767eb39f1002bb957bb5b83258275a4e46428ed5906101a790336103b6565b6000838152602082815260408083206001600160a01b038616845290915290205460ff161561021d5760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c6465727300000060448201526064015b60405180910390fd5b6102278383610456565b505050565b336001600160a01b038216146102845760405162461bcd60e51b815260206004820152601a60248201527f43616e206f6e6c792072656e6f756e636520666f722073656c660000000000006044820152606401610214565b61028e82826104d2565b5050565b60008281527fd0ebebe8e6445c62babf8fef767eb39f1002bb957bb5b83258275a4e46428ed5602090815260408083206001600160a01b038516845290915290205460ff165b92915050565b60008281527fd0ebebe8e6445c62babf8fef767eb39f1002bb957bb5b83258275a4e46428ed56020818152604080842084805290915282205460ff16610348576000848152602091825260408082206001600160a01b0386168352909252205460ff1690506102d8565b5060019392505050565b60008281527fd0ebebe8e6445c62babf8fef767eb39f1002bb957bb5b83258275a4e46428ed660205260409020547fd0ebebe8e6445c62babf8fef767eb39f1002bb957bb5b83258275a4e46428ed5906103ac90336103b6565b61022783836104d2565b60008281527fd0ebebe8e6445c62babf8fef767eb39f1002bb957bb5b83258275a4e46428ed5602081815260408084206001600160a01b03861685529091529091205460ff1661022757610414826001600160a01b03166014610554565b61041f846020610554565b6040516020016104309291906107b5565b60408051601f198184030181529082905262461bcd60e51b825261021491600401610836565b60008281527fd0ebebe8e6445c62babf8fef767eb39f1002bb957bb5b83258275a4e46428ed5602081815260408084206001600160a01b0386168086529252808420805460ff19166001179055519192339286917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d91a4505050565b7fd0ebebe8e6445c62babf8fef767eb39f1002bb957bb5b83258275a4e46428ed56104fd83836103b6565b6000838152602082815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4505050565b6060600061056383600261087f565b61056e906002610896565b67ffffffffffffffff811115610586576105866108a9565b6040519080825280601f01601f1916602001820160405280156105b0576020820181803683370190505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106105e7576105e76108bf565b60200101906001600160f81b031916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610632576106326108bf565b60200101906001600160f81b031916908160001a905350600061065684600261087f565b610661906001610896565b90505b60018111156106e6577f303132333435363738396162636465660000000000000000000000000000000085600f16601081106106a2576106a26108bf565b1a60f81b8282815181106106b8576106b86108bf565b60200101906001600160f81b031916908160001a90535060049490941c936106df816108d5565b9050610664565b5083156107355760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610214565b9392505050565b60006020828403121561074e57600080fd5b5035919050565b6000806040838503121561076857600080fd5b8235915060208301356001600160a01b038116811461078657600080fd5b809150509250929050565b60005b838110156107ac578181015183820152602001610794565b50506000910152565b7f5065726d697373696f6e733a206163636f756e742000000000000000000000008152600083516107ed816015850160208801610791565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000601591840191820152835161082a816026840160208801610791565b01602601949350505050565b6020815260008251806020840152610855816040850160208701610791565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176102d8576102d8610869565b808201808211156102d8576102d8610869565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000816108e4576108e4610869565b50600019019056fea2646970667358221220c45b7c832903b3822edfa7782f2e157e0c5f387db61c8fc8b8ba9c7833e974ad64736f6c63430008130033";

type PermissionsLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PermissionsLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PermissionsLogic__factory extends ContractFactory {
  constructor(...args: PermissionsLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PermissionsLogic> {
    return super.deploy(overrides || {}) as Promise<PermissionsLogic>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PermissionsLogic {
    return super.attach(address) as PermissionsLogic;
  }
  override connect(signer: Signer): PermissionsLogic__factory {
    return super.connect(signer) as PermissionsLogic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PermissionsLogicInterface {
    return new utils.Interface(_abi) as PermissionsLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PermissionsLogic {
    return new Contract(address, _abi, signerOrProvider) as PermissionsLogic;
  }
}
