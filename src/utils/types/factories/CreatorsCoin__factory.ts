/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { CreatorsCoin, CreatorsCoinInterface } from "../CreatorsCoin";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "management",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "repPerCRP",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CreatorsCoin__InvalidRepPerCRP",
    type: "error",
  },
  {
    inputs: [],
    name: "CreatorsCoin__RepTokenBurnFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "Security__ERC20TransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "Security__InvalidCoin",
    type: "error",
  },
  {
    inputs: [],
    name: "Security__NotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "Security__TransferFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "manager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "repPerCRP",
        type: "uint256",
      },
    ],
    name: "NewRepPerCRPSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "repTokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "CRPTokenAmount",
        type: "uint256",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "manager",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IManagement.Coin",
        name: "coin",
        type: "uint8",
      },
    ],
    name: "WithdrawnToAddress",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getManagement",
    outputs: [
      {
        internalType: "contract IManagement",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRepPerCRP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "repPerCRP",
        type: "uint256",
      },
    ],
    name: "setRepPerCRP",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "enum IManagement.Coin",
        name: "coin",
        type: "uint8",
      },
    ],
    name: "withdrawToAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001edc38038062001edc833981016040819052620000349162000133565b816040518060400160405280601181526020017021b932b0ba37b939a82927902a37b5b2b760791b8152506040518060400160405280600381526020016204352560ec1b81525081600390816200008c919062000214565b5060046200009b828262000214565b505050620000b8620000b2620000dd60201b60201c565b620000e1565b60016006556007805460ff191690556001600160a01b031660805260085550620002e0565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080604083850312156200014757600080fd5b82516001600160a01b03811681146200015f57600080fd5b6020939093015192949293505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200019a57607f821691505b602082108103620001bb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200020f57600081815260208120601f850160051c81016020861015620001ea5750805b601f850160051c820191505b818110156200020b57828155600101620001f6565b5050505b505050565b81516001600160401b038111156200023057620002306200016f565b620002488162000241845462000185565b84620001c1565b602080601f831160018114620002805760008415620002675750858301515b600019600386901b1c1916600185901b1785556200020b565b600085815260208120601f198616915b82811015620002b15788860151825594840194600190910190840162000290565b5085821015620002d05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608051611baf6200032d600039600081816102e6015281816105280152818161067d0152818161094901528181610ab901528181610ff6015281816114c901526115eb0152611baf6000f3fe608060405234801561001057600080fd5b50600436106101ae5760003560e01c80638119c065116100ee5780639dc29fac11610097578063b329b72e11610071578063b329b72e1461035e578063d004f0f714610371578063dd62ed3e14610384578063f2fde38b146103bd57600080fd5b80639dc29fac14610325578063a457c2d714610338578063a9059cbb1461034b57600080fd5b806390ca03d0116100c857806390ca03d0146102e457806394b918de1461030a57806395d89b411461031d57600080fd5b80638119c065146102af5780638456cb59146102b75780638da5cb5b146102bf57600080fd5b80633f4ba83a1161015b5780635c975abb116101355780635c975abb146102605780635e14af2f1461026b57806370a082311461027e578063715018a6146102a757600080fd5b80633f4ba83a1461023b57806340c10f19146102455780635098861e1461025857600080fd5b806323b872dd1161018c57806323b872dd14610206578063313ce56714610219578063395093511461022857600080fd5b806306fdde03146101b3578063095ea7b3146101d157806318160ddd146101f4575b600080fd5b6101bb6103d0565b6040516101c891906118c5565b60405180910390f35b6101e46101df366004611928565b610462565b60405190151581526020016101c8565b6002545b6040519081526020016101c8565b6101e4610214366004611954565b61047c565b604051600681526020016101c8565b6101e4610236366004611928565b6104a2565b6102436104e1565b005b610243610253366004611928565b6104f3565b6008546101f8565b60075460ff166101e4565b610243610279366004611995565b6105c1565b6101f861028c3660046119ae565b6001600160a01b031660009081526020819052604090205490565b610243610650565b610243610662565b610243610777565b6005546001600160a01b03165b6040516001600160a01b0390911681526020016101c8565b7f00000000000000000000000000000000000000000000000000000000000000006102cc565b610243610318366004611995565b610787565b6101bb610794565b610243610333366004611928565b6107a3565b6101e4610346366004611928565b6107c5565b6101e4610359366004611928565b61087f565b61024361036c3660046119cb565b61088d565b61024361037f366004611928565b610923565b6101f8610392366004611a11565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102436103cb3660046119ae565b610b6c565b6060600380546103df90611a4a565b80601f016020809104026020016040519081016040528092919081815260200182805461040b90611a4a565b80156104585780601f1061042d57610100808354040283529160200191610458565b820191906000526020600020905b81548152906001019060200180831161043b57829003601f168201915b5050505050905090565b600033610470818585610bf9565b60019150505b92915050565b60003361048a858285610d49565b610495858585610ddb565b60019150505b9392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061047090829086906104dc908790611a84565b610bf9565b6104e9610fc8565b6104f161109f565b565b6104fb610fc8565b6105036110af565b61050b6110b7565b61051582826110c9565b6105228233600019610bf9565b6105b0827f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166366e992e56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610584573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a89190611aa5565b600019610bf9565b6105bd8230600019610bf9565b5050565b6105c9610fc8565b6105d16110af565b6105d96110b7565b80600003610613576040517fec3f6e8800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600881905560405181815233907f11ec6e21112a64f47e7eb1d82bdcb5ad09d448df92e668213e36c1ef51d33b589060200160405180910390a250565b610658611188565b6104f160006111e2565b6040516318cbf99160e11b81526104f1906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633197f322906106b390600390600401611afa565b602060405180830381865afa1580156106d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f49190611aa5565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523360048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610753573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103189190611b08565b61077f610fc8565b6104f161124c565b6107913382610923565b50565b6060600480546103df90611a4a565b6107ab610fc8565b6107b36110af565b6107bb6110b7565b6105bd828261125c565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156108675760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6108748286868403610bf9565b506001949350505050565b600033610470818585610ddb565b6108956110b7565b61089d610fc8565b60008160038111156108b1576108b1611ac2565b036108c5576108c083836113c2565b6108d1565b6108d181308585611455565b826001600160a01b0316336001600160a01b03167fa55fe81116427fb2a175a84303712673cd30e706f711c9b9aebc531d0523531e8484604051610916929190611b21565b60405180910390a3505050565b61092b6110b7565b6109336110af565b6000600854826109439190611b35565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633197f32260036040518263ffffffff1660e01b81526004016109949190611afa565b602060405180830381865afa1580156109b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d59190611aa5565b6040517f9dc29fac0000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152602482018690529190911690639dc29fac906044016020604051808303816000875af1158015610a3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a639190611b57565b905080610a9c576040517fe17cf69600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610aa684836110c9565b610ab38433600019610bf9565b610b15847f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166366e992e56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610584573d6000803e3d6000fd5b610b228430600019610bf9565b60408051848152602081018490526001600160a01b038616917f77f92a1b6a1a11de8ca49515ad4c1fad45632dd3442167d74b90b304a3c7a758910160405180910390a250505050565b610b74611188565b6001600160a01b038116610bf05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161085e565b610791816111e2565b6001600160a01b038316610c745760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161085e565b6001600160a01b038216610cf05760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161085e565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259101610916565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610dd55781811015610dc85760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161085e565b610dd58484848403610bf9565b50505050565b6001600160a01b038316610e575760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161085e565b6001600160a01b038216610ed35760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161085e565b6001600160a01b03831660009081526020819052604090205481811015610f625760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161085e565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610dd5565b6040517f330602260000000000000000000000000000000000000000000000000000000081523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690633306022690602401602060405180830381865afa158015611045573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110699190611b57565b6104f1576040517f9402bca500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110a76110b7565b6104f1611738565b6104f161178a565b6110bf6117dd565b6104f16001600655565b6001600160a01b03821661111f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161085e565b80600260008282546111319190611a84565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6005546001600160a01b031633146104f15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161085e565b600580546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6112546110b7565b6104f1611836565b6001600160a01b0382166112d85760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f7300000000000000000000000000000000000000000000000000000000000000606482015260840161085e565b6001600160a01b038216600090815260208190526040902054818110156113675760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f6365000000000000000000000000000000000000000000000000000000000000606482015260840161085e565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610916565b505050565b80156105bd576000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611415576040519150601f19603f3d011682016040523d82523d6000602084013e61141a565b606091505b50509050806113bd576040517f52c1682a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600084600381111561146957611469611ac2565b036114a0576040517f2a2ba0c800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000306001600160a01b038516036115d4576040516318cbf99160e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633197f322906114fe908890600401611afa565b602060405180830381865afa15801561151b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153f9190611aa5565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b03858116600483015260248201859052919091169063a9059cbb906044016020604051808303816000875af11580156115a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115cd9190611b57565b90506116fa565b6040516318cbf99160e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633197f32290611620908890600401611afa565b602060405180830381865afa15801561163d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116619190611aa5565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b03868116600483015285811660248301526044820185905291909116906323b872dd906064016020604051808303816000875af11580156116d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116f79190611b57565b90505b80611731576040517f967fb4f300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050565b611740611873565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60075460ff16156104f15760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a2070617573656400000000000000000000000000000000604482015260640161085e565b60026006540361182f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161085e565b6002600655565b61183e61178a565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861176d3390565b60075460ff166104f15760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604482015260640161085e565b600060208083528351808285015260005b818110156118f2578581018301518582016040015282016118d6565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461079157600080fd5b6000806040838503121561193b57600080fd5b823561194681611913565b946020939093013593505050565b60008060006060848603121561196957600080fd5b833561197481611913565b9250602084013561198481611913565b929592945050506040919091013590565b6000602082840312156119a757600080fd5b5035919050565b6000602082840312156119c057600080fd5b813561049b81611913565b6000806000606084860312156119e057600080fd5b83356119eb81611913565b925060208401359150604084013560048110611a0657600080fd5b809150509250925092565b60008060408385031215611a2457600080fd5b8235611a2f81611913565b91506020830135611a3f81611913565b809150509250929050565b600181811c90821680611a5e57607f821691505b602082108103611a7e57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561047657634e487b7160e01b600052601160045260246000fd5b600060208284031215611ab757600080fd5b815161049b81611913565b634e487b7160e01b600052602160045260246000fd5b60048110611af657634e487b7160e01b600052602160045260246000fd5b9052565b602081016104768284611ad8565b600060208284031215611b1a57600080fd5b5051919050565b8281526040810161049b6020830184611ad8565b600082611b5257634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215611b6957600080fd5b8151801515811461049b57600080fdfea26469706673582212202fe76b23e2ebb2b1d165c5e841d82b7b16fb5e0655fb738906bb8067d937164764736f6c63430008130033";

type CreatorsCoinConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CreatorsCoinConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CreatorsCoin__factory extends ContractFactory {
  constructor(...args: CreatorsCoinConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    management: PromiseOrValue<string>,
    repPerCRP: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CreatorsCoin> {
    return super.deploy(
      management,
      repPerCRP,
      overrides || {}
    ) as Promise<CreatorsCoin>;
  }
  override getDeployTransaction(
    management: PromiseOrValue<string>,
    repPerCRP: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(management, repPerCRP, overrides || {});
  }
  override attach(address: string): CreatorsCoin {
    return super.attach(address) as CreatorsCoin;
  }
  override connect(signer: Signer): CreatorsCoin__factory {
    return super.connect(signer) as CreatorsCoin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CreatorsCoinInterface {
    return new utils.Interface(_abi) as CreatorsCoinInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CreatorsCoin {
    return new Contract(address, _abi, signerOrProvider) as CreatorsCoin;
  }
}
