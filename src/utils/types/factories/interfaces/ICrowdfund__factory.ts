/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ICrowdfund,
  ICrowdfundInterface,
} from "../../interfaces/ICrowdfund";

const _abi = [
  {
    inputs: [],
    name: "Crowdfund__CallerNotInvestor",
    type: "error",
  },
  {
    inputs: [],
    name: "Crowdfund__HighQuotaMaxAmountReached",
    type: "error",
  },
  {
    inputs: [],
    name: "Crowdfund__InvalidCollection",
    type: "error",
  },
  {
    inputs: [],
    name: "Crowdfund__InvalidMinSoldRate",
    type: "error",
  },
  {
    inputs: [],
    name: "Crowdfund__LowQuotaMaxAmountReached",
    type: "error",
  },
  {
    inputs: [],
    name: "Crowdfund__MaxSupplyIs0",
    type: "error",
  },
  {
    inputs: [],
    name: "Crowdfund__MinGoalNotReached",
    type: "error",
  },
  {
    inputs: [],
    name: "Crowdfund__NoMoreTokensToMint",
    type: "error",
  },
  {
    inputs: [],
    name: "Crowdfund__NotEnoughValueSent",
    type: "error",
  },
  {
    inputs: [],
    name: "Crowdfund__NotInvestIdOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Crowdfund__PastDue",
    type: "error",
  },
  {
    inputs: [],
    name: "Crowdfund__RefundNotPossible",
    type: "error",
  },
  {
    inputs: [],
    name: "Crowdfund__RegQuotaMaxAmountReached",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "ETHAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "USDAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "CreatorsCoinAmount",
        type: "uint256",
      },
    ],
    name: "CreatorWithdrawed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_donationReceiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ETHAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "USDAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "CreatorsCoinAmount",
        type: "uint256",
      },
    ],
    name: "DonationSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IManagement.Coin",
        name: "coin",
        type: "uint8",
      },
    ],
    name: "DonationTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "investor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "investId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lowQuotaAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "regQuotaAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "highQuotaAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalPayment",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IManagement.Coin",
        name: "coin",
        type: "uint8",
      },
    ],
    name: "Invested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "investor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "InvestorMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "investor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ETHAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "USDAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "CreatorsCoinAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "investIdsRefunded",
        type: "uint256[]",
      },
    ],
    name: "RefundedAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "manager",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "investor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ETHAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "USDAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "CreatorsCoinAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "investIdsRefunded",
        type: "uint256[]",
      },
    ],
    name: "RefundedAllToAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "investor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "investId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IManagement.Coin",
        name: "coin",
        type: "uint8",
      },
    ],
    name: "RefundedInvestId",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "enum IManagement.Coin",
        name: "coin",
        type: "uint8",
      },
    ],
    name: "donate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "donor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "enum IManagement.Coin",
        name: "coin",
        type: "uint8",
      },
    ],
    name: "donateForAddress",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "investor",
        type: "address",
      },
    ],
    name: "getAllInvestIdsPerInvestor",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCollection",
    outputs: [
      {
        internalType: "contract IERC721Art",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDonationFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDonationReceiver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDueDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "investId",
        type: "uint256",
      },
    ],
    name: "getInvestIdInfos",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPayment",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sevenDaysPeriod",
            type: "uint256",
          },
          {
            internalType: "enum IManagement.Coin",
            name: "coin",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "investor",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lowQuotaAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "regQuotaAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "highQuotaAmount",
            type: "uint256",
          },
        ],
        internalType: "struct ICrowdfund.InvestIdInfos",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "investor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getInvestIdsPerInvestor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMinSoldRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNextInvestId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "investor",
        type: "address",
      },
      {
        internalType: "enum IManagement.Coin",
        name: "coin",
        type: "uint8",
      },
    ],
    name: "getPaymentsPerCoin",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ICrowdfund.QuotaClass",
        name: "classz",
        type: "uint8",
      },
    ],
    name: "getQuotaInfos",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[3]",
            name: "values",
            type: "uint256[3]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bought",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nextTokenId",
            type: "uint256",
          },
        ],
        internalType: "struct ICrowdfund.QuotaInfos",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[3]",
        name: "valuesLowQuota",
        type: "uint256[3]",
      },
      {
        internalType: "uint256[3]",
        name: "valuesRegQuota",
        type: "uint256[3]",
      },
      {
        internalType: "uint256[3]",
        name: "valuesHighQuota",
        type: "uint256[3]",
      },
      {
        internalType: "uint256",
        name: "amountLowQuota",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountRegQuota",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountHighQuota",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "donationReceiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "donationFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minSoldRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "crowdfundDuration",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOfLowQuota",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOfRegularQuota",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOfHighQuota",
        type: "uint256",
      },
      {
        internalType: "enum IManagement.Coin",
        name: "coin",
        type: "uint8",
      },
    ],
    name: "invest",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "investor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOfLowQuota",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOfRegularQuota",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOfHighQuota",
        type: "uint256",
      },
      {
        internalType: "enum IManagement.Coin",
        name: "coin",
        type: "uint8",
      },
    ],
    name: "investForAddress",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "investor",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "refundAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "investor",
        type: "address",
      },
    ],
    name: "refundToAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "investId",
        type: "uint256",
      },
    ],
    name: "refundWithInvestId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ICrowdfund__factory {
  static readonly abi = _abi;
  static createInterface(): ICrowdfundInterface {
    return new utils.Interface(_abi) as ICrowdfundInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ICrowdfund {
    return new Contract(address, _abi, signerOrProvider) as ICrowdfund;
  }
}
