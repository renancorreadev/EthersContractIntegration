/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IOffers, IOffersInterface } from "../../interfaces/IOffers";

const _abi = [
  {
    inputs: [],
    name: "Offers__AssetNotFromCreatorsPRO",
    type: "error",
  },
  {
    inputs: [],
    name: "Offers__InsufficientCurrencyBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "Offers__InvalidCoin",
    type: "error",
  },
  {
    inputs: [],
    name: "Offers__InvalidOferror",
    type: "error",
  },
  {
    inputs: [],
    name: "Offers__InvalidOfferDuration",
    type: "error",
  },
  {
    inputs: [],
    name: "Offers__InvalidOfferIdRange",
    type: "error",
  },
  {
    inputs: [],
    name: "Offers__InvalidTokenType",
    type: "error",
  },
  {
    inputs: [],
    name: "Offers__NotAcceptingOffers",
    type: "error",
  },
  {
    inputs: [],
    name: "Offers__NotEnoughETHSent",
    type: "error",
  },
  {
    inputs: [],
    name: "Offers__NotOwnerOrApprovedTokens",
    type: "error",
  },
  {
    inputs: [],
    name: "Offers__OfferDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "Offers__OfferExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "Offers__WantedInvalidQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "Offers__WantedZeroTokens",
    type: "error",
  },
  {
    inputs: [],
    name: "Offers__ZeroPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "offeror",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "offerId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "assetContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quantityBought",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalPricePaid",
        type: "uint256",
      },
    ],
    name: "AcceptedOffer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "manager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_acceptingOffers",
        type: "bool",
      },
    ],
    name: "AcceptingOffersSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "offeror",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "offerId",
        type: "uint256",
      },
    ],
    name: "CancelledOffer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "offeror",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "offerId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "assetContract",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "offeror",
            type: "address",
          },
          {
            internalType: "address",
            name: "assetContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "quantity",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "totalPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationTimestamp",
            type: "uint256",
          },
          {
            internalType: "enum IOffers.TokenType",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "enum IOffers.Status",
            name: "status",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct IOffers.Offer",
        name: "offer",
        type: "tuple",
      },
    ],
    name: "NewOffer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_offerId",
        type: "uint256",
      },
    ],
    name: "acceptOffer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_offerId",
        type: "uint256",
      },
    ],
    name: "cancelOffer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAcceptingOffers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endId",
        type: "uint256",
      },
    ],
    name: "getAllOffers",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "offeror",
            type: "address",
          },
          {
            internalType: "address",
            name: "assetContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "quantity",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "totalPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationTimestamp",
            type: "uint256",
          },
          {
            internalType: "enum IOffers.TokenType",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "enum IOffers.Status",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct IOffers.Offer[]",
        name: "offers",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endId",
        type: "uint256",
      },
    ],
    name: "getAllValidOffers",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "offeror",
            type: "address",
          },
          {
            internalType: "address",
            name: "assetContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "quantity",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "totalPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationTimestamp",
            type: "uint256",
          },
          {
            internalType: "enum IOffers.TokenType",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "enum IOffers.Status",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct IOffers.Offer[]",
        name: "offers",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_offerId",
        type: "uint256",
      },
    ],
    name: "getOffer",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "offeror",
            type: "address",
          },
          {
            internalType: "address",
            name: "assetContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "quantity",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "totalPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationTimestamp",
            type: "uint256",
          },
          {
            internalType: "enum IOffers.TokenType",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "enum IOffers.Status",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct IOffers.Offer",
        name: "offer",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "assetContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "quantity",
            type: "uint256",
          },
          {
            internalType: "enum IManagement.Coin",
            name: "currency",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "totalPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "offerDuration",
            type: "uint256",
          },
        ],
        internalType: "struct IOffers.OfferParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "makeOffer",
    outputs: [
      {
        internalType: "uint256",
        name: "offerId",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_acceptingOffers",
        type: "bool",
      },
    ],
    name: "setAcceptingOffers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalOffers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IOffers__factory {
  static readonly abi = _abi;
  static createInterface(): IOffersInterface {
    return new utils.Interface(_abi) as IOffersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IOffers {
    return new Contract(address, _abi, signerOrProvider) as IOffers;
  }
}
