/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "ERC721A__IERC721ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721A__IERC721ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "ERC721AUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721AUpgradeable__factory>;
    getContractFactory(
      name: "IERC721AUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721AUpgradeable__factory>;
    getContractFactory(
      name: "DefaultOperatorFiltererUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DefaultOperatorFiltererUpgradeable__factory>;
    getContractFactory(
      name: "IOperatorFilterRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOperatorFilterRegistry__factory>;
    getContractFactory(
      name: "OperatorFiltererUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OperatorFiltererUpgradeable__factory>;
    getContractFactory(
      name: "OperatorFilterRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OperatorFilterRegistry__factory>;
    getContractFactory(
      name: "OperatorFilterRegistryErrorsAndEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OperatorFilterRegistryErrorsAndEvents__factory>;
    getContractFactory(
      name: "OwnedRegistrant",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnedRegistrant__factory>;
    getContractFactory(
      name: "RevokableDefaultOperatorFilterer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RevokableDefaultOperatorFilterer__factory>;
    getContractFactory(
      name: "RevokableOperatorFilterer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RevokableOperatorFilterer__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "Ownable2Step",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable2Step__factory>;
    getContractFactory(
      name: "BeaconProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BeaconProxy__factory>;
    getContractFactory(
      name: "IBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeacon__factory>;
    getContractFactory(
      name: "UpgradeableBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UpgradeableBeacon__factory>;
    getContractFactory(
      name: "ERC1967Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Proxy__factory>;
    getContractFactory(
      name: "ERC1967Upgrade",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Upgrade__factory>;
    getContractFactory(
      name: "ERC1967UpgradeUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967UpgradeUpgradeable__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "UUPSUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UUPSUpgradeable__factory>;
    getContractFactory(
      name: "ERC2981",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC2981__factory>;
    getContractFactory(
      name: "IERC2981",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC2981__factory>;
    getContractFactory(
      name: "IERC1822Proxiable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1822Proxiable__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableUpgradeable__factory>;
    getContractFactory(
      name: "IERC1155MetadataURIUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURIUpgradeable__factory>;
    getContractFactory(
      name: "PausableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PausableUpgradeable__factory>;
    getContractFactory(
      name: "ReentrancyGuardUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuardUpgradeable__factory>;
    getContractFactory(
      name: "ERC1155Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Upgradeable__factory>;
    getContractFactory(
      name: "ERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Upgradeable__factory>;
    getContractFactory(
      name: "ERC2981Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC2981Upgradeable__factory>;
    getContractFactory(
      name: "ERC721Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Upgradeable__factory>;
    getContractFactory(
      name: "IERC1155ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "IERC1155Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Upgradeable__factory>;
    getContractFactory(
      name: "IERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165Upgradeable__factory>;
    getContractFactory(
      name: "IERC2981Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC2981Upgradeable__factory>;
    getContractFactory(
      name: "IERC721MetadataUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721MetadataUpgradeable__factory>;
    getContractFactory(
      name: "IERC721ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "IERC721Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Upgradeable__factory>;
    getContractFactory(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: "MulticallUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MulticallUpgradeable__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "CurrencyTransferLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CurrencyTransferLib__factory>;
    getContractFactory(
      name: "EnglishAuctionsLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EnglishAuctionsLogic__factory>;
    getContractFactory(
      name: "EnglishAuctionsStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EnglishAuctionsStorage__factory>;
    getContractFactory(
      name: "ERC2771ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC2771ContextUpgradeable__factory>;
    getContractFactory(
      name: "ContractMetadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContractMetadata__factory>;
    getContractFactory(
      name: "Permissions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Permissions__factory>;
    getContractFactory(
      name: "PermissionsEnumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PermissionsEnumerable__factory>;
    getContractFactory(
      name: "Staking721Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Staking721Upgradeable__factory>;
    getContractFactory(
      name: "IContractMetadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IContractMetadata__factory>;
    getContractFactory(
      name: "INFTStake",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INFTStake__factory>;
    getContractFactory(
      name: "IPermissions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPermissions__factory>;
    getContractFactory(
      name: "IPermissionsEnumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPermissionsEnumerable__factory>;
    getContractFactory(
      name: "IPlatformFee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPlatformFee__factory>;
    getContractFactory(
      name: "IStaking721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStaking721__factory>;
    getContractFactory(
      name: "ERC2771ContextConsumer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC2771ContextConsumer__factory>;
    getContractFactory(
      name: "IERC2771Context",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC2771Context__factory>;
    getContractFactory(
      name: "ERC2771ContextLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC2771ContextLogic__factory>;
    getContractFactory(
      name: "ERC2771ContextStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC2771ContextStorage__factory>;
    getContractFactory(
      name: "PermissionsEnumerableLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PermissionsEnumerableLogic__factory>;
    getContractFactory(
      name: "PermissionsEnumerableStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PermissionsEnumerableStorage__factory>;
    getContractFactory(
      name: "PermissionsLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PermissionsLogic__factory>;
    getContractFactory(
      name: "PermissionsStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PermissionsStorage__factory>;
    getContractFactory(
      name: "ReentrancyGuardStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuardStorage__factory>;
    getContractFactory(
      name: "CreatorsCoin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CreatorsCoin__factory>;
    getContractFactory(
      name: "Crowdfund",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Crowdfund__factory>;
    getContractFactory(
      name: "CRPReward",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CRPReward__factory>;
    getContractFactory(
      name: "CRPStaking",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CRPStaking__factory>;
    getContractFactory(
      name: "ERC1155Tickets_Art",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Tickets_Art__factory>;
    getContractFactory(
      name: "ERC721Art",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Art__factory>;
    getContractFactory(
      name: "Escrow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Escrow__factory>;
    getContractFactory(
      name: "ICrowdfund",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICrowdfund__factory>;
    getContractFactory(
      name: "ICRPReward",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICRPReward__factory>;
    getContractFactory(
      name: "ICRPStaking",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICRPStaking__factory>;
    getContractFactory(
      name: "IEnglishAuctions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEnglishAuctions__factory>;
    getContractFactory(
      name: "IERC20Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Burnable__factory>;
    getContractFactory(
      name: "IERC721Art",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Art__factory>;
    getContractFactory(
      name: "IERC721ArtHandle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721ArtHandle__factory>;
    getContractFactory(
      name: "IEscrow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEscrow__factory>;
    getContractFactory(
      name: "IManagement",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IManagement__factory>;
    getContractFactory(
      name: "IOffers",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOffers__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "Management",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Management__factory>;
    getContractFactory(
      name: "MockCreatorsCoin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockCreatorsCoin__factory>;
    getContractFactory(
      name: "MockMultiSig",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockMultiSig__factory>;
    getContractFactory(
      name: "MockUSDToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockUSDToken__factory>;
    getContractFactory(
      name: "Offers",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Offers__factory>;
    getContractFactory(
      name: "RepToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RepToken__factory>;
    getContractFactory(
      name: "Security",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Security__factory>;
    getContractFactory(
      name: "SecurityUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SecurityUpgradeable__factory>;

    getContractAt(
      name: "ERC721A__IERC721ReceiverUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721A__IERC721ReceiverUpgradeable>;
    getContractAt(
      name: "ERC721AUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721AUpgradeable>;
    getContractAt(
      name: "IERC721AUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721AUpgradeable>;
    getContractAt(
      name: "DefaultOperatorFiltererUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DefaultOperatorFiltererUpgradeable>;
    getContractAt(
      name: "IOperatorFilterRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOperatorFilterRegistry>;
    getContractAt(
      name: "OperatorFiltererUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OperatorFiltererUpgradeable>;
    getContractAt(
      name: "OperatorFilterRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OperatorFilterRegistry>;
    getContractAt(
      name: "OperatorFilterRegistryErrorsAndEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OperatorFilterRegistryErrorsAndEvents>;
    getContractAt(
      name: "OwnedRegistrant",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnedRegistrant>;
    getContractAt(
      name: "RevokableDefaultOperatorFilterer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RevokableDefaultOperatorFilterer>;
    getContractAt(
      name: "RevokableOperatorFilterer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RevokableOperatorFilterer>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "Ownable2Step",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable2Step>;
    getContractAt(
      name: "BeaconProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BeaconProxy>;
    getContractAt(
      name: "IBeacon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBeacon>;
    getContractAt(
      name: "UpgradeableBeacon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UpgradeableBeacon>;
    getContractAt(
      name: "ERC1967Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Proxy>;
    getContractAt(
      name: "ERC1967Upgrade",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Upgrade>;
    getContractAt(
      name: "ERC1967UpgradeUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967UpgradeUpgradeable>;
    getContractAt(
      name: "Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "UUPSUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UUPSUpgradeable>;
    getContractAt(
      name: "ERC2981",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC2981>;
    getContractAt(
      name: "IERC2981",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC2981>;
    getContractAt(
      name: "IERC1822Proxiable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1822Proxiable>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "OwnableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableUpgradeable>;
    getContractAt(
      name: "IERC1155MetadataURIUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURIUpgradeable>;
    getContractAt(
      name: "PausableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PausableUpgradeable>;
    getContractAt(
      name: "ReentrancyGuardUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuardUpgradeable>;
    getContractAt(
      name: "ERC1155Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Upgradeable>;
    getContractAt(
      name: "ERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165Upgradeable>;
    getContractAt(
      name: "ERC2981Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC2981Upgradeable>;
    getContractAt(
      name: "ERC721Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Upgradeable>;
    getContractAt(
      name: "IERC1155ReceiverUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155ReceiverUpgradeable>;
    getContractAt(
      name: "IERC1155Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Upgradeable>;
    getContractAt(
      name: "IERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165Upgradeable>;
    getContractAt(
      name: "IERC2981Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC2981Upgradeable>;
    getContractAt(
      name: "IERC721MetadataUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721MetadataUpgradeable>;
    getContractAt(
      name: "IERC721ReceiverUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721ReceiverUpgradeable>;
    getContractAt(
      name: "IERC721Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Upgradeable>;
    getContractAt(
      name: "ContextUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: "MulticallUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MulticallUpgradeable>;
    getContractAt(
      name: "Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "CurrencyTransferLib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CurrencyTransferLib>;
    getContractAt(
      name: "EnglishAuctionsLogic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EnglishAuctionsLogic>;
    getContractAt(
      name: "EnglishAuctionsStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EnglishAuctionsStorage>;
    getContractAt(
      name: "ERC2771ContextUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC2771ContextUpgradeable>;
    getContractAt(
      name: "ContractMetadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContractMetadata>;
    getContractAt(
      name: "Permissions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Permissions>;
    getContractAt(
      name: "PermissionsEnumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PermissionsEnumerable>;
    getContractAt(
      name: "Staking721Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Staking721Upgradeable>;
    getContractAt(
      name: "IContractMetadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IContractMetadata>;
    getContractAt(
      name: "INFTStake",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INFTStake>;
    getContractAt(
      name: "IPermissions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPermissions>;
    getContractAt(
      name: "IPermissionsEnumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPermissionsEnumerable>;
    getContractAt(
      name: "IPlatformFee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPlatformFee>;
    getContractAt(
      name: "IStaking721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStaking721>;
    getContractAt(
      name: "ERC2771ContextConsumer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC2771ContextConsumer>;
    getContractAt(
      name: "IERC2771Context",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC2771Context>;
    getContractAt(
      name: "ERC2771ContextLogic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC2771ContextLogic>;
    getContractAt(
      name: "ERC2771ContextStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC2771ContextStorage>;
    getContractAt(
      name: "PermissionsEnumerableLogic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PermissionsEnumerableLogic>;
    getContractAt(
      name: "PermissionsEnumerableStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PermissionsEnumerableStorage>;
    getContractAt(
      name: "PermissionsLogic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PermissionsLogic>;
    getContractAt(
      name: "PermissionsStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PermissionsStorage>;
    getContractAt(
      name: "ReentrancyGuardStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuardStorage>;
    getContractAt(
      name: "CreatorsCoin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CreatorsCoin>;
    getContractAt(
      name: "Crowdfund",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Crowdfund>;
    getContractAt(
      name: "CRPReward",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CRPReward>;
    getContractAt(
      name: "CRPStaking",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CRPStaking>;
    getContractAt(
      name: "ERC1155Tickets_Art",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Tickets_Art>;
    getContractAt(
      name: "ERC721Art",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Art>;
    getContractAt(
      name: "Escrow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Escrow>;
    getContractAt(
      name: "ICrowdfund",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICrowdfund>;
    getContractAt(
      name: "ICRPReward",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICRPReward>;
    getContractAt(
      name: "ICRPStaking",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICRPStaking>;
    getContractAt(
      name: "IEnglishAuctions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEnglishAuctions>;
    getContractAt(
      name: "IERC20Burnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Burnable>;
    getContractAt(
      name: "IERC721Art",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Art>;
    getContractAt(
      name: "IERC721ArtHandle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721ArtHandle>;
    getContractAt(
      name: "IEscrow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEscrow>;
    getContractAt(
      name: "IManagement",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IManagement>;
    getContractAt(
      name: "IOffers",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOffers>;
    getContractAt(
      name: "IWETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH>;
    getContractAt(
      name: "Management",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Management>;
    getContractAt(
      name: "MockCreatorsCoin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockCreatorsCoin>;
    getContractAt(
      name: "MockMultiSig",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockMultiSig>;
    getContractAt(
      name: "MockUSDToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockUSDToken>;
    getContractAt(
      name: "Offers",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Offers>;
    getContractAt(
      name: "RepToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RepToken>;
    getContractAt(
      name: "Security",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Security>;
    getContractAt(
      name: "SecurityUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SecurityUpgradeable>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
